name: Update
description: checkout branch, install pre-commit, update, create PR

inputs:
  token:
    description: git pat to execute git related commands
    required: true
    default: ${{ github.token }}
  python:
    description: python version to use
    required: true
    default: "3.8"
  test-mode:
    description: to test the workflow
    required: false

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ inputs.token }}
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python }}
        cache: pip
    - name: Install tools and requirements
      shell: bash
      run: pip install -U pip setuptools wheel pre-commit
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Update pre-commit
      shell: bash
      run: pre-commit autoupdate
    - name: Check if updates
      shell: bash
      id: update-pre-commit
      run: echo "::set-output name=state::$(git diff --name-only origin/main | grep -c pre-commit-config)"
    - name: changelog
      if: steps.update-pre-commit.outputs.state != 0
      shell: bash
      run:  |
        sed -i "s/^++++$/++++\n- chore: update pre-commit config/" CHANGELOG.rst
    - name: Create or Update Pull Request
      if: ${{ steps.update-pre-commit.outputs.state != 0 && ! inputs.test-mode }}
      uses: gr2m/create-or-update-pull-request-action@v1.x
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      with:
        title: "Update pre-commit config [no tag]"
        body: |
          Update report
          - Update pre-commit config
          - Auto-generated by [create-pull-request](https://github.com/gr2m/create-or-update-pull-request-action)
        branch: update-precommit
        path: "."
        commit-message: "chore: Autoupdate pre-commit"
        author: "GitHub Actions <scott.tiger@ominatechnologies.com>"
        auto-merge: squash
        update-pull-request-title-and-body: false

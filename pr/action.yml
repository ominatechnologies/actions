name: Test PR
description: checkout, check changelog, setup python, pip install, pre-commit, flake8, mypy, pytest

inputs:
  token:
    description: git pat to execute git related commands
    required: true
    default: ${{ github.token }}
  python:
    description: python version to use
    required: true
    default: "3.9"
  install:
    description: locations to pip install
    required: true
    default: .
  mypy:
    description: path for mypy
    required: false
  wait:
    description: wait for ports to be available
    required: false
  depends-on:
    description: internal library dependencies (upercase !)
    required: true
  python-envs:
    description: python related environments
    required: false
  pytest-envs:
    description: pytest related environments
    required: true
  test-mode:
    description: to test the workflow
    required: false

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Check that CHANGELOG.rst has been updated
      shell: bash
      run: git diff --name-only origin/main HEAD | grep CHANGELOG.rst || exit 1
    - name: git cred
      shell: bash
      run: git config --global url.https://${{ inputs.token }}@github.com/.insteadOf ssh://git@github.com/
    - name: Set env
      shell: bash
      run: |
        IFS=', ' read -r -a array <<< "${{ inputs.depends-on }}"
        for element in "${array[@]}"
        do
          repo=$(echo $element | tr '[:upper:]' '[:lower:]')
          git ls-remote --exit-code --heads https://${{ inputs.token }}@github.com/ominatechnologies/${repo}.git $GITHUB_HEAD_REF && echo "$element=$GITHUB_HEAD_REF" >> $GITHUB_ENV || echo ''
        done
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python }}
        cache: pip
    - name: Setup python related environment variables
      if: inputs.python-envs
      shell: bash
      run: echo "${{ inputs.python-envs }}" | sed 's#pythonLocation#${{ env.pythonLocation }}#g' >> $GITHUB_ENV
    - name: Install tools and requirements
      shell: bash
      run: |
        pip install -U pip setuptools wheel pre-commit
        pip install -r requirements.dev.txt ${{ inputs.install }}
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Run pre-commit
      shell: bash
      run: pre-commit run --all-files
    - name: Run mypy
      if: inputs.mypy
      shell: bash
      run: mypy ${{ inputs.mypy }}
    - name: Wait for ports to be available
      if: inputs.wait
      shell: bash
      run: |
        IFS=', ' read -r -a array <<< "${{ inputs.wait }}"
        for element in "${array[@]}"
        do
          while ! nc -z localhost $element; do sleep 3; done
        done
    - name: Set default env vars for pytest
      if: inputs.pytest-envs
      shell: bash
      run: echo "${{ inputs.pytest-envs }}" >> $GITHUB_ENV
    - name: Run pytest
      shell: bash
      run: pytest
